name: Live query tests

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  execute-mysql-queries:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 13306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:

    - name: Verify MySQL connection from container
      run: |
        # Note: mysql or localhost do no work
        mysql --host 127.0.0.1 --port 13306 -uroot -ppassword -e "SHOW DATABASES"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('compose/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip
          ${{ runner.os }}

    - name: Install
      # To move to action, reuse: e.g. install.sh..
      run: |
        python -m pip install --upgrade pip
        pip install -r compose/requirements.txt

    - name: run tests
      run: |
        python compose/manage.py test -- --cov=compose -m live

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true
